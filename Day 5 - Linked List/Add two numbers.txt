/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int sum=0, carry=0;
        ListNode* ans=new ListNode(0);
        ListNode* temp=ans;
        while(l1!=NULL && l2!=NULL) {
            sum=l1->val+l2->val+carry;
            temp->val=sum%10;
            carry=sum/10;
            l1=l1->next, l2=l2->next;
            if(carry!=0 || l1!=NULL || l2!=NULL) temp->next=new ListNode(0);
            temp=temp->next;
        }
        while(l1!=NULL) {
            sum=l1->val+carry;
            temp->val=sum%10;
            carry=sum/10;
            l1=l1->next;
            if(carry!=0 || l1!=NULL || l2!=NULL) temp->next=new ListNode(0);
            temp=temp->next;
        }
        while(l2!=NULL) {
            sum=l2->val+carry;
            temp->val=sum%10;
            carry=sum/10;
            l2=l2->next;
            if(carry!=0 || l1!=NULL || l2!=NULL) temp->next=new ListNode(0);
            temp=temp->next;
        }
        if(carry!=0) temp->val=carry;
        return ans;
    }
};