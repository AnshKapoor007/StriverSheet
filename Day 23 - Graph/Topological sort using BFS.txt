#include <bits/stdc++.h> 
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    queue<int> q;
    unordered_map<int, vector<int>> graph;
    vector<int> indegree(v, 0);
    vector<int> ans;
    for(auto edge: edges) {
        indegree[edge[1]]++;
        graph[edge[0]].push_back(edge[1]);
    }
    for(int i=0; i<v; i++) {
        if(indegree[i]==0)
            q.push(i);
    }
    while(!q.empty()) {
        int curr=q.front();
        ans.push_back(curr);
        q.pop();
        for(int neighbour: graph[curr]) {
            indegree[neighbour]--;
            if(indegree[neighbour]==0)
                q.push(neighbour);
        }
    }
    return ans;
}