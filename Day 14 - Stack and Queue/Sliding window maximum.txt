class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n=nums.size();
        deque<int> dq;
        vector<int> ans;
        for(int i=0; i<n; i++) {
            if(!dq.empty() && dq.front()==i-k) dq.pop_front(); //checking if front index out of limit of window
            while(!dq.empty() && nums[dq.back()]<nums[i]) //poping until no value is less than nums[i]
                dq.pop_back();
            dq.push_back(i); //pushing nums[i]
            if(i>=k-1) ans.push_back(nums[dq.front()]);
        }
        return ans;
    }
};