class Solution {
public:
    void NG(vector<int>& nextG, vector<int>& nums) {
        stack<int> st;
        for(int i=nums.size()-1; i>=0; i--) {
            if(st.empty()) nextG[i]=-1;
            else if(st.top()>nums[i]) nextG[i]=st.top();
            else {
                while(!st.empty() && st.top()<=nums[i]) st.pop();
                if(st.empty()) nextG[i]=-1;
                else nextG[i]=st.top();
            }
            st.push(nums[i]);
        }
    }
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> nextGreater(nums2.size());
        unordered_map<int, int> umap;
        int n1=nums1.size(), n2=nums2.size();
        NG(nextGreater, nums2);
        for(int i=0; i<n2; i++)
            umap[nums2[i]]=nextGreater[i];
        for(int i=0; i<n1; i++)
            nums1[i]=umap[nums1[i]];
        return nums1;
    }
};